version: "3.7"
services:
  redis-svc:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis_vol:/data
      - "$PWD/config/redis.conf:/usr/local/etc/redis/redis.conf"
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    networks:
      app_net:

  proxy:
    container_name: nginx
    depends_on:
      - auth-svc
    ports:
      - "80:80"
      - "443:443"
    networks:
      app_net:
    volumes:
      - "$PWD/logs/nginx:/var/log/nginx"
      - "$PWD/config/nginx.conf:/etc/nginx/conf.d/default.conf"
      - "$PWD/cert:/var/cert"
    image: nginx:alpine

  auth-svc:
    container_name: auth-app
    build: ./app1/auth
    ports:
      - "4000:443"
    restart: always
    depends_on:
      - redis-svc
    networks:
      app_net:
    env_file:
      - ./app1/auth/.env.production
    volumes:
      - "$PWD/logs/auth:/usr/src/app/logs"
      - "$PWD/files/app1/auth:/usr/src/app/files"
      - "$PWD/cert:/usr/src/app/cert"
    image: auth-app

  ierec-app:
    container_name: ierec-app
    build: ./app1/client
    restart: always
    ports:
      - "4003:443"
    networks:
      app_net:
    env_file:
      - ./app1/client/.env
    volumes:
      - "$PWD/cert:/usr/src/app/cert"
    image: ierec-app

  course-svc:
    container_name: course-svc
    build: ./app1/course
    ports:
      - "4001:443"
    networks:
      app_net:
    env_file:
      - ./app1/course/.env.production
    volumes:
      - "$PWD/logs/courses:/usr/src/app/logs"
      - "$PWD/files/app1/courses:/usr/src/app/files"
      - "$PWD/cert:/usr/src/app/cert"
    image: course-svc

  # ierec-app2:
  #   container_name: ierec-app2
  #   build: ./app2
  #   restart: always
  #   ports:
  #     - "4009:4000"
  #   networks:
  #     app_net:
  #   env_file:
  #     - ./app2/.env
  #   image: ierec-app2

volumes:
  redis_vol:

networks:
  app_net:
    driver: bridge
